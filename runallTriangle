#!/bin/sh -

# Experiments for: Fast Mutual Exclusion by the Triangle Algorithm, Wim H. Hesselink, Peter A. Buhr
# and David Dice, Concurrency and Computation: Practice and Experience, Volume 30, Issue 4 25 Feb 2018, e4183


algorithms="Burns2 LamportFast Taubenfeld TaubenfeldBuhr Kessels PetersonBuhr YangAndersonFast AndersonKim Triangle TriangleMod MCS"
time=5
outdir=`hostname`
exec=`hostname`.out

mkdir -p ${outdir}

if [ ${#} -ne 0 ] ; then
    algorithms="${@}"
fi

cflag="-Wall -Wextra -Werror -Wno-implicit-fallthrough -std=gnu11 -O3 -DNDEBUG -fno-reorder-functions -DPIN" #
if [ ${outdir} = "algol" -o ${outdir} = "prolog" ] ; then
#    atomicinst=-mno-outline-atomics	# use ARM LL/SC instructions for atomics
    atomicinst=-march=armv8.2-a+lse
    cflag=${cflag}" ${atomicinst} -DATOMIC"
fi

if [ "${outdir}" = "prolog" -o "${outdir}" = "swift" -o "${outdir}" = "java" ] ; then # Ubuntu 22.04
    CC=gcc-12
else
    CC=gcc-11
fi

runalgorithm() {
    for flag in "" "FAST" ; do
	echo "${outdir}/${1}${2}${flag}"
	${CC} ${cflag} ${flag:+-D${flag}} ${2:+-D${2}} -DAlgorithm=${1} Harness.c -lpthread -lm -o ${exec}
	./run1 time=${time} exec="${exec}" > "${outdir}/${1}${2}${flag}"
	if [ -f core ] ; then
	    echo core generated for ${1}
	    break
	fi
    done
}

rm -rf core
for algorithm in ${algorithms} ; do
    if [ ${algorithm} = "YangAndersonFast" -o ${algorithm} = "AndersonKim" -o ${algorithm} = "Triangle" -o ${algorithm} = "TriangleMod" ] ; then
	runalgorithm ${algorithm} PB
	runalgorithm ${algorithm} TB
    else
	runalgorithm ${algorithm}
    fi
done
